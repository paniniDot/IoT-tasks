/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package room.service;

import room.service.client.Client;
import room.service.mqtt.MessageListener;
import room.service.serial.CommChannel;
import room.service.serial.SerialCommChannel;

import org.eclipse.paho.client.mqttv3.MqttException;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

public class App {

    public static void main(String[] args) throws Exception {
        // Create a blocking queue to store the received messages
        BlockingQueue<String> messageQueue = new LinkedBlockingQueue<>();
        CommChannel serial = new SerialCommChannel("COM3", 9600);

        try (Client client = new Client("tcp", "broker.mqtt-dashboard.com", 1883)) {

            // Register message listeners for the topics
            client.registerToTopic("esp32/light", new MessageListener(messageQueue));
            client.registerToTopic("esp32/motion", new MessageListener(messageQueue));

            while (true) {
                // Check if there are any messages in the queue
                if (!messageQueue.isEmpty()) {
                    String message = messageQueue.take();
                    System.out.println(message);
                    serial.sendMsg(message);
                }

                // Add a delay before the next iteration
                Thread.sleep(1000);
            }
        } catch (MqttException | InterruptedException e) {
            e.printStackTrace();
        }
    }

}
